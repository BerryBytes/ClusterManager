name: Multi-language Lint

on:
    push:
      branches:
        - '**'  # Run on all branches
    pull_request:  # Keep PR checks for good measure
    workflow_dispatch:

jobs:
  lint:
    name: Lint All Languages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Go Setup and Linting
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: true

    - name: Install Go Linting Tools
      run: |
        go install golang.org/x/lint/golint@latest
        go install honnef.co/go/tools/cmd/staticcheck@latest
        echo "$HOME/go/bin" >> $GITHUB_PATH  # Ensure installed tools are available in PATH

    - name: Run Go Lint
      run: |
        cd cluster-status
        golint ./...
        go vet ./...
        staticcheck ./...


    # Node.js Setup (for TypeScript, JavaScript, and template linting)
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: cluster-ui/package-lock.json

    - name: Install Node.js dependencies
      working-directory: cluster-ui
      run: |
        npm install -g eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin
        npm ci

    # - name: Lint TypeScript
    #   run: |
    #     npx tsc --noEmit
    #     npx eslint "**/*.{ts,tsx}" --fix

    - name: Lint JavaScript
      run: npx eslint "**/*.{js,jsx}" --fix

    - name: Lint Smarty Templates
      run: npx prettier --check "**/*.tpl" --plugin=prettier-plugin-smarty

    # - name: Lint Mustache Templates
    #   run: npx prettier --check "**/*.mustache" --plugin=prettier-plugin-mustache

    # Python Setup and Linting
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python linting tools
      working-directory: cluster-service
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort pylint mypy

    - name: Lint Python
      run: |
        black .
        flake8 .
        isort . --check-only
        pylint **/*.py || true
        mypy .

    # # Report results
    # - name: Upload lint results
    #   if: always()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: lint-results
    #     path: |
    #       **/lint-results.*
    #       **/pylint-report.txt
    #       **/eslint-report.json
    #     retention-days: 14