name: Multi-language Lint

on:
  push:
    branches:
      - '**'  # Run on all branches
    paths:
      - 'cluster-api/**'
      - 'cluster-service/**'
      - 'cluster-status/**'
      - 'cluster-ui/**'
  pull_request:
    paths:
      - 'cluster-api/**'
      - 'cluster-service/**'
      - 'cluster-status/**'
      - 'cluster-ui/**'
  workflow_dispatch:

jobs:
  lint:
    name: Lint All Languages
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Go Setup and Linting (only for cluster-status)
    - name: Set up Go
      if: contains(github.event.pull_request.changed_files, 'cluster-status/') || contains(github.event.push.changed_files, 'cluster-status/')
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: true

    - name: Install Go tools
      if: contains(github.event.pull_request.changed_files, 'cluster-status/') || contains(github.event.push.changed_files, 'cluster-status/')
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        go install honnef.co/go/tools/cmd/staticcheck@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Go Format Check
      if: contains(github.event.pull_request.changed_files, 'cluster-status/') || contains(github.event.push.changed_files, 'cluster-status/')
      working-directory: cluster-status
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "The following files need formatting:"
          gofmt -l .
          echo "Please run 'gofmt -w .' to format your code."
          exit 1
        fi

    - name: Go Imports Check
      if: contains(github.event.pull_request.changed_files, 'cluster-status/') || contains(github.event.push.changed_files, 'cluster-status/')
      working-directory: cluster-status
      run: |
        if [ -n "$(goimports -l .)" ]; then
          echo "The following files have incorrect imports:"
          goimports -l .
          echo "Please run 'goimports -w .' to fix imports."
          exit 1
        fi

    - name: Run golangci-lint
      if: contains(github.event.pull_request.changed_files, 'cluster-status/') || contains(github.event.push.changed_files, 'cluster-status/')
      working-directory: cluster-status
      run: golangci-lint run --timeout=5m

    - name: Run staticcheck
      if: contains(github.event.pull_request.changed_files, 'cluster-status/') || contains(github.event.push.changed_files, 'cluster-status/')
      working-directory: cluster-status
      run: staticcheck ./...

    # Node.js Setup (for TypeScript, JavaScript, and template linting) (only for cluster-ui)
    - name: Set up Node.js
      if: contains(github.event.pull_request.changed_files, 'cluster-ui/') || contains(github.event.push.changed_files, 'cluster-ui/')
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: cluster-ui/package-lock.json

    - name: Install Node.js dependencies
      if: contains(github.event.pull_request.changed_files, 'cluster-ui/') || contains(github.event.push.changed_files, 'cluster-ui/')
      working-directory: cluster-ui
      run: |
        npm install -g eslint@^8.56.0 typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin
        npm ci

    - name: Lint TypeScript
      if: contains(github.event.pull_request.changed_files, 'cluster-ui/') || contains(github.event.push.changed_files, 'cluster-ui/')
      working-directory: cluster-ui
      run: |
        npx tsc --noEmit
        npx eslint "*/.{ts,tsx}" --fix

    - name: Lint JavaScript
      if: contains(github.event.pull_request.changed_files, 'cluster-ui/') || contains(github.event.push.changed_files, 'cluster-ui/')
      working-directory: cluster-ui
      run: npx eslint "*/.{js,jsx}" --fix

    # Python Setup and Linting (only for cluster-api and cluster-service)
    - name: Set up Python
      if: contains(github.event.pull_request.changed_files, 'cluster-api/') || contains(github.event.push.changed_files, 'cluster-api/') || contains(github.event.pull_request.changed_files, 'cluster-service/') || contains(github.event.push.changed_files, 'cluster-service/')
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python linting tools
      if: contains(github.event.pull_request.changed_files, 'cluster-api/') || contains(github.event.push.changed_files, 'cluster-api/') || contains(github.event.pull_request.changed_files, 'cluster-service/') || contains(github.event.push.changed_files, 'cluster-service/')
      working-directory: cluster-service
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort pylint

    - name: Lint Python
      if: contains(github.event.pull_request.changed_files, 'cluster-api/') || contains(github.event.push.changed_files, 'cluster-api/') || contains(github.event.pull_request.changed_files, 'cluster-service/') || contains(github.event.push.changed_files, 'cluster-service/')
      working-directory: cluster-service
      run: |
        pylint */.py || true