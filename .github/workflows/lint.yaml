name: Multi-language Lint

on:
  push:
    paths:
      - 'cluster-api/**'
      - 'cluster-service/**'
      - 'cluster-status/**'
      - 'cluster-ui/**'
    branches:
      - '**'  # Run on all branches
  pull_request:
    paths:
      - 'cluster-api/**'
      - 'cluster-service/**'
      - 'cluster-status/**'
      - 'cluster-ui/**'
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      cluster-api: ${{ steps.filter.outputs.cluster-api }}
      cluster-service: ${{ steps.filter.outputs.cluster-service }}
      cluster-status: ${{ steps.filter.outputs.cluster-status }}
      cluster-ui: ${{ steps.filter.outputs.cluster-ui }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            cluster-api:
              - 'cluster-api/**/*.py'
            cluster-service:
              - 'cluster-service/**/*.py'
            cluster-status:
              - 'cluster-status/**/*.go'
            cluster-ui:
              - 'cluster-ui/**/*.{ts,tsx,js,jsx}'

  python-lint:
    needs: changes
    if: |
      needs.changes.outputs.cluster-api == 'true' ||
      needs.changes.outputs.cluster-service == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [cluster-api, cluster-service]
        include:
          - directory: cluster-api
            run-if: needs.changes.outputs.cluster-api == 'true'
          - directory: cluster-service
            run-if: needs.changes.outputs.cluster-service == 'true'
    steps:
      - uses: actions/checkout@v4
      - if: matrix.run-if
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - if: matrix.run-if
        name: Install Python linting tools
        working-directory: ${{ matrix.directory }}
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort pylint

      - if: matrix.run-if
        name: Lint Python
        working-directory: ${{ matrix.directory }}
        run: |
          pylint **/*.py || true

  go-lint:
    needs: changes
    if: needs.changes.outputs.cluster-status == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Install Go tools
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Go Format Check
        working-directory: cluster-status
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "The following files need formatting:"
            gofmt -l .
            echo "Please run 'gofmt -w .' to format your code."
            exit 1
          fi

      - name: Go Imports Check
        working-directory: cluster-status
        run: |
          if [ -n "$(goimports -l .)" ]; then
            echo "The following files have incorrect imports:"
            goimports -l .
            echo "Please run 'goimports -w .' to fix imports."
            exit 1
          fi

      - name: Run golangci-lint
        working-directory: cluster-status
        run: golangci-lint run --timeout=5m

      - name: Run staticcheck
        working-directory: cluster-status
        run: staticcheck ./...

  typescript-lint:
    needs: changes
    if: needs.changes.outputs.cluster-ui == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cluster-ui/package-lock.json

      - name: Install Node.js dependencies
        working-directory: cluster-ui
        run: |
          npm install -g eslint@^8.56.0 typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin
          npm ci

      - name: Lint TypeScript
        working-directory: cluster-ui
        run: |
          npx tsc --noEmit
          npx eslint "**/*.{ts,tsx}" --fix

      - name: Lint JavaScript
        working-directory: cluster-ui
        run: npx eslint "**/*.{js,jsx}" --fix