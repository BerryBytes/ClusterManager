name: Multi-language Lint

on:
  push:
    paths:
      - 'cluster-api/**'
      - 'cluster-service/**'
      - 'cluster-status/**'
      - 'cluster-ui/**'
    branches:
      - '**'
  pull_request:
    paths:
      - 'cluster-api/**'
      - 'cluster-service/**'
      - 'cluster-status/**'
      - 'cluster-ui/**'
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      python: ${{ steps.filter.outputs.python }}
      go: ${{ steps.filter.outputs.go }}
      typescript: ${{ steps.filter.outputs.typescript }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            python:
              - 'cluster-api/**/*.py'
              - 'cluster-service/**/*.py'
            go:
              - 'cluster-status/**/*.go'
            typescript:
              - 'cluster-ui/**/*.{ts,tsx,js,jsx}'

  python-lint:
    needs: changes
    if: needs.changes.outputs.python == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get changed Python files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            cluster-api/**/*.py
            cluster-service/**/*.py

      - name: Set up Python
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Python linting tools
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort pylint

      - name: Run linters
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"
          
          # Run linters only on changed files
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | while read file; do
            if [ -f "$file" ]; then
              echo "Linting $file"
              pylint "$file" || echo "Pylint warnings found"
              black --check "$file"
              isort --check-only --diff "$file"
            fi
          done

  go-lint:
    needs: changes
    if: needs.changes.outputs.go == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get changed Go files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: cluster-status/**/*.go

      - name: Set up Go
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Install Go tools
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run Go linters
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: cluster-status
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"
          
          # Run formatters
          gofmt -l -w .
          goimports -w .
          
          # Run linters
          golangci-lint run --timeout=5m
          staticcheck ./...

  typescript-lint:
    needs: changes
    if: needs.changes.outputs.typescript == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get changed TypeScript/JavaScript files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            cluster-ui/**/*.ts
            cluster-ui/**/*.tsx
            cluster-ui/**/*.js
            cluster-ui/**/*.jsx

      - name: Set up Node.js
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cluster-ui/package-lock.json

      - name: Install dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: cluster-ui
        run: |
          npm ci
          npm install -g typescript eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin

      - name: Run TypeScript/JavaScript linters
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: cluster-ui
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"
          
          # Type check
          npx tsc --noEmit
          
          # Lint changed files
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | while read file; do
            if [ -f "$file" ]; then
              echo "Linting $file"
              npx eslint "$file" --fix
            fi
          done